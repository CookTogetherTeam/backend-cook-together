name: Deploy to VM and Build

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to VM
    steps:
      - uses: actions/checkout@v3

      - name: Generate .env before deploy
        run: |
          cat <<- EOF > .env
          SUPABASE_URL=${{ secrets.SUPABASE_URL }}
          SUPABASE_KEY=${{ secrets.SUPABASE_MASTER_KEY }}
          DATABASE_NAME=${{ secrets.DATABASE_NAME }}
          DATABASE_USER=${{ secrets.DATABASE_USER }}
          DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
          DATABASE_HOST=${{ secrets.DATABASE_HOST }}
          DATABASE_PORT=${{ secrets.DATABASE_PORT }}
          DATABASE_SCHEMA=${{ secrets.DATABASE_SCHEMA }}
          DJANGO_ENV=prod
          DJANGO_SECRET_KEY='${{ secrets.DJANGO_SECRET_KEY }}'
          DOMAIN='${{ secrets.DOMAIN }}'
          EOF

      - name: Deploy via ssh
        uses: easingthemes/ssh-deploy@v5.1.0
        with:
          SSH_PRIVATE_KEY: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          REMOTE_HOST: ${{ secrets.VM_HOST }}
          REMOTE_USER: ${{ secrets.VM_USERNAME }}
          REMOTE_PORT: ${{ secrets.VM_SSH_PORT }}
          TARGET: "${{ secrets.VM_REMOTE_TARGET_FOLDER }}"
          EXCLUDE: ".git/"
          SCRIPT_AFTER_REQUIRED: true
          SCRIPT_AFTER: |
            subst_domain() {
              echo "### Realizando substituição de variáveis... ###"
              DOMAIN='${{ secrets.DOMAIN }}'; export DOMAIN
              envsubst '$DOMAIN' < ./deploy/nginx.conf > ./deploy/tmp.conf && mv ./deploy/tmp.conf ./deploy/nginx.conf
              envsubst '$DOMAIN' < ./deploy/nginx-initiate.conf > ./deploy/tmp.conf && mv ./deploy/tmp.conf ./deploy/nginx-initiate.conf
            }
            cd ${{ secrets.VM_REMOTE_TARGET_FOLDER }} || exit
            if [ ! -e ./data/finished-cert-bootstrap ]; then
                echo "##### INICIANDO BOOTSTRAP DE CERTIFICADO #####"
                subst_domain
                chmod +x ./deploy/cert-bootstrap.sh
                sudo ./deploy/cert-bootstrap.sh ${{ secrets.DOMAIN }}
                sleep 5
                docker compose up --build --force-recreate -d backend nginx
            else
                subst_domain
                docker compose down && \
                docker compose up --build --force-recreate -d backend nginx && \
                docker image prune -f
            fi
